#Question 1: Extracting Tesla Stock Data Using yfinance
tesla = yf.Ticker('TSLA')
tesla_data = tesla.history(period="max")
tesla_data.reset_index(inplace=True)
tesla_data.head()

#Question 2: Extracting Tesla Revenue Data Using Webscraping
url = 'https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue'
html_data = requests.get(url).text
soup = BeautifulSoup(html_data,"html5lib")
tesla_revenue = pd.DataFrame(columns=['Date', 'Revenue'])

for table in soup.find_all('table'):

    if ('Tesla Quarterly Revenue' in table.find('th').text):
        rows = table.find_all('tr')
        
        for row in rows:
            col = row.find_all('td')
            
            if col != []:
                date = col[0].text
                revenue = col[1].text.replace(',','').replace('$','')

                tesla_revenue = tesla_revenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
tesla_revenue = pd.DataFrame(columns=['Date', 'Revenue'])

for table in soup.find_all('table'):

    if ('Tesla Quarterly Revenue' in table.find('th').text):
        rows = table.find_all('tr')
        
        for row in rows:
            col = row.find_all('td')
            
            if col != []:
                date = col[0].text
                revenue = col[1].text.replace(',','').replace('$','')

tesla_revenue = tesla_revenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
print(tesla_revenue)
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'].astype(bool)]
tesla_revenue.dropna(inplace=True)
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
tesla_revenue.tail()


#Question 3: Extracting GameStop Stock Data Using yfinance
gme = yf.Ticker('GME')
gme_data = gme.history(period='max')
gme = yf.Ticker('GME')
gme_data.reset_index(inplace=True)
gme_data.head()

#Question 4: Extracting GameStop Revenue Data Using Webscraping
url = 'https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue'
html_data = requests.get(url).text
soup = BeautifulSoup(html_data,"html5lib")
gme_revenue = pd.DataFrame(columns=['Date', 'Revenue'])

for table in soup.find_all('table'):

    if ('GameStop Quarterly Revenue' in table.find('th').text):
        rows = table.find_all('tr')
        
        for row in rows:
            col = row.find_all('td')
            
            if col != []:
                date = col[0].text
                revenue = col[1].text.replace(',','').replace('$','')

                gme_revenue = gme_revenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
gme_revenue = pd.DataFrame(columns=['Date', 'Revenue'])

gme_revenue.tail()

#Question 5: Tesla Stock and Revenue Dashboard
import matplotlib.pyplot as plt

def make_graph(df, title):
    plt.figure(figsize=(10, 6))
    plt.plot(df.index, df['Close'], label='Closing Price')
    plt.title(title)
    plt.xlabel('Date')
    plt.ylabel('Price')
    plt.legend()
    plt.show()

# Plot Tesla stock data
make_graph(tesla_data, 'Tesla Stock Price')

#Question 6: GameStop Stock and Revenue Dashboard
import matplotlib.pyplot as plt

def make_graph(df, title):
    plt.figure(figsize=(10, 6))
    plt.plot(df.index, df['Close'], label='Closing Price')
    plt.title(title)
    plt.xlabel('Date')

    plt.ylabel('Price')
    plt.legend()
    plt.show()

# Plot GameStop stock data
make_graph(gme_data, 'GameStop Stock Price')
